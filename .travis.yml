language: generic
sudo: false

git:
  depth: 1

services:
  - postgresql

addons_shortcuts:
  addons_buildpackages: &buildpackages
    - python-psycopg2
    - libexpat1-dev
    - libpq-dev
    - libbz2-dev
    - libproj-dev
    - lua5.2
    - liblua5.2-dev
    - libluajit-5.1-dev
    - libboost1.55-dev
    - libboost-system1.55-dev
    - libboost-filesystem1.55-dev
  addons_pg96_gcc48: &pg96_gcc48
    postgresql: "9.6"
    apt:
      sources: ["boost-latest","ubuntu-toolchain-r-test"]
      packages: ['g++-4.8', 'gcc-4.8', "postgresql-9.6-postgis-2.3", *buildpackages]

  addons_pg96_gcc49: &pg96_gcc49
    postgresql: "9.6"
    apt:
      sources: ["boost-latest","ubuntu-toolchain-r-test"]
      packages: ['g++-4.9', 'gcc-4.9', "postgresql-9.6-postgis-2.3", *buildpackages]

  addons_pg10_gcc6: &pg10_gcc6
    postgresql: "10"
    apt:
      sources: ["boost-latest","ubuntu-toolchain-r-test"]
      packages: ['g++-6', 'gcc-6', "postgresql-10-postgis-2.4", *buildpackages]

  addons_pg10_gcc7: &pg10_gcc7
    postgresql: "10"
    apt:
      sources: ["boost-latest","ubuntu-toolchain-r-test"]
      packages: ['g++-7', 'gcc-7', "postgresql-10-postgis-2.4", *buildpackages]

  addons_pg10_gcc8: &pg10_gcc8
    postgresql: "10"
    apt:
      sources: ["boost-latest","ubuntu-toolchain-r-test"]
      packages: ['g++-8', 'gcc-8', "postgresql-10-postgis-2.4", *buildpackages]


  addons_pg10_clang50: &pg10_clang50
    postgresql: "10"
    apt:
      sources: ["boost-latest",'ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-5.0']
      packages: ['clang-5.0', 'clang-tidy-5.0', "postgresql-10-postgis-2.4", *buildpackages]

  addons_pg10_clang60: &pg10_clang60
    postgresql: "10"
    apt:
      sources: ["boost-latest",'ubuntu-toolchain-r-test', 'llvm-toolchain-trusty-6.0']
      packages: ['clang-6.0', 'clang-tidy-6.0', "postgresql-10-postgis-2.4", *buildpackages]


matrix:

  include:
    - os: linux
      sudo: false
      compiler: "clang-5.0"
      env: T="clang50_dbtest" RUNTEST="#All-db" 
           CXXFLAGS="-pedantic -Werror" LUAJIT_OPTION="OFF"
           CC=clang-5.0 CXX=clang++-5.0 CLANG_TIDY=clang-tidy-5.0
      addons: *pg10_clang50

    - os: linux
      sudo: false
      compiler: "clang-5.0"
      env: T="clang50_dbtest_luajit" RUNTEST="#All-db" 
           CXXFLAGS="-pedantic -Werror" LUAJIT_OPTION="ON"
           CC=clang-5.0 CXX=clang++-5.0 CLANG_TIDY=clang-tidy-5.0
      addons: *pg10_clang50

    - os: linux
      sudo: false
      compiler: "clang-6.0"
      env: T="clang60_dbtest_luajit" RUNTEST="#All-db" 
           CXXFLAGS="-fsanitize=address,undefined,integer -fno-sanitize-recover=all"
           LDFLAGS="-fsanitize=address,undefined,integer"
           LUAJIT_OPTION="ON"
           CC=clang-6.0 CXX=clang++-6.0
      addons: *pg10_clang60

    - os: linux
      sudo: required
      compiler: "gcc-4.8"      
      env: T="gcc4asan_NoDB" RUNTEST="-L NoDB" 
           CXXFLAGS="-pedantic -Werror -fsanitize=address" LUAJIT_OPTION="OFF"
           CC=gcc-4.8 CXX=g++-4.8
      addons: *pg96_gcc48

    - os: linux
      sudo: required
      compiler: "gcc-4.9"      
      env: T="gcc4asan_dbtest" RUNTEST="#All-db"
           CXXFLAGS="-pedantic -Werror -fsanitize=address" LUAJIT_OPTION="OFF"
           CC=gcc-4.9 CXX=g++-4.9
      addons: *pg96_gcc49

    - os: linux
      sudo: required
      compiler: "gcc-4.9"      
      env: T="gcc4asan_dbtest_luajit" RUNTEST="#All-db"
           CXXFLAGS="-pedantic -Werror -fsanitize=address" LUAJIT_OPTION="ON"
           CC=gcc-4.9 CXX=g++-4.9
      addons: *pg96_gcc49



    - os: osx
      osx_image: xcode9.1
      compiler: clang
      sudo: false
      env: T="osx_clang_NoDB" RUNTEST="-L NoDB" 
           CXXFLAGS="-pedantic -Werror " LUAJIT_OPTION="OFF"
      before_install:
        - brew install lua;
      before_script:
        - $CXX --version
        - xml2-config --version
        - proj | head -n1
        - lua -v

    - os: linux
      compiler: gcc-6
      sudo: false
      env: T="gcc6_dbtest_luajit" RUNTEST="#All-dbtest" CXXFLAGS=" -pedantic -Werror" LUAJIT_OPTION="ON"
           CC=gcc-6 CXX=g++-6
      addons: *pg10_gcc6

    - os: linux
      compiler: gcc-7
      sudo: false
      env: T="gcc7_dbtest_luajit" RUNTEST="#All-dbtest" CXXFLAGS=" -pedantic -Werror" LUAJIT_OPTION="ON"
           CC=gcc-7 CXX=g++-7
      addons: *pg10_gcc7

    - os: linux
      compiler: gcc-8
      sudo: false
      env: T="gcc8_dbtest_luajit" RUNTEST="#All-dbtest" CXXFLAGS=" -pedantic -Werror" LUAJIT_OPTION="ON"
           CC=gcc-8 CXX=g++-8
      addons: *pg10_gcc8

  allow_failures:
    - os: linux
      env: T="gcc8_dbtest_luajit" RUNTEST="#All-dbtest" CXXFLAGS=" -pedantic -Werror" LUAJIT_OPTION="ON"
           CC=gcc-8 CXX=g++-8



before_install:
  - sudo mkdir -p /extra/pg/tablespacetest  
  - sudo chown postgres:postgres /extra/pg/tablespacetest
  - dpkg -l | grep -E 'lua|proj|xml|bz2|postgis|zlib|boost|expat'  # checking available versions
before_script:
  - psql -U postgres -c "CREATE TABLESPACE tablespacetest LOCATION '/extra/pg/tablespacetest'"
  - psql -U postgres -c "CREATE EXTENSION postgis"
  - psql -U postgres -c "CREATE EXTENSION hstore"
  - psql -U postgres -c "SELECT version()"
  - psql -U postgres -c "SELECT PostGIS_Full_Version()"
  - $CXX --version
  - xml2-config --version
  - proj | head -n1
  - lua -v
script:
  - mkdir build && cd build
  - cmake .. -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Debug -DWITH_LUAJIT=$LUAJIT_OPTION
  - make -j2
  - echo "Running tests that does not require PostgreSQL server"
  - if [[ $RUNTEST ]]; then ctest -VV $RUNTEST; fi
after_failure:
  - # rerun make, but verbosely
    make VERBOSE=1
